"""empty message

Revision ID: 79a2eb86e512
Revises: 
Create Date: 2020-09-02 22:15:13.301402

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '79a2eb86e512'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('docterinfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hospital', sa.String(length=100), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=False),
    sa.Column('position', sa.String(length=100), nullable=False),
    sa.Column('domains', sa.String(length=250), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('doc_url', sa.String(length=100), nullable=False),
    sa.Column('isavailable', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('head_url', sa.String(length=100), nullable=False),
    sa.Column('token', sa.String(length=150), nullable=True),
    sa.Column('isdocter', sa.Boolean(), nullable=False),
    sa.Column('docinfo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['docinfo_id'], ['docterinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dianzan_doc',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('docterinfo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['docterinfo_id'], ['docterinfo.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'docterinfo_id')
    )
    op.create_table('friend_apply',
    sa.Column('passive_id', sa.Integer(), nullable=False),
    sa.Column('positive_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['passive_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['positive_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('passive_id', 'positive_id')
    )
    op.create_table('one_order',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('docter_name', sa.String(length=100), nullable=False),
    sa.Column('patient_name', sa.String(length=100), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('iscommented', sa.Boolean(), nullable=False),
    sa.Column('docter_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['docter_id'], ['docterinfo.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_user',
    sa.Column('first_id', sa.Integer(), nullable=False),
    sa.Column('second_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['first_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['second_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('first_id', 'second_id')
    )
    op.create_table('answer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dianzan_post',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.create_table('order_comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('patient_username', sa.String(length=100), nullable=False),
    sa.Column('oc_patient_head_url', sa.String(length=100), nullable=False),
    sa.Column('docter_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['docter_id'], ['docterinfo.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['one_order.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_post',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.String(length=100), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dianzan_answer',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'answer_id')
    )
    op.create_table('picture',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pic_url', sa.String(length=100), nullable=False),
    sa.Column('pic_post_id', sa.Integer(), nullable=True),
    sa.Column('pic_answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pic_answer_id'], ['answer.id'], ),
    sa.ForeignKeyConstraint(['pic_post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dianzan_comment',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'comment_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dianzan_comment')
    op.drop_table('picture')
    op.drop_table('dianzan_answer')
    op.drop_table('comment')
    op.drop_table('user_post')
    op.drop_table('user_history')
    op.drop_table('order_comment')
    op.drop_table('dianzan_post')
    op.drop_table('answer')
    op.drop_table('user_user')
    op.drop_table('post')
    op.drop_table('one_order')
    op.drop_table('friend_apply')
    op.drop_table('dianzan_doc')
    op.drop_table('user')
    op.drop_table('docterinfo')
    # ### end Alembic commands ###
